import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
import numpy as np
import cv2
import tensorflow as tf

# Load pre-trained model
model = tf.keras.models.load_model("deepfake_detector.h5")

# Function to preprocess image and predict
def detect_deepfake(image_path):
    img = cv2.imread(image_path)
    img = cv2.resize(img, (128, 128))  # Resize to match model input
    img = img / 255.0  # Normalize
    img = np.expand_dims(img, axis=0)  # Add batch dimension

    prediction = model.predict(img)[0][0]
    return "Fake" if prediction > 0.5 else "Real"

# Function to handle file selection
def upload_image():
    file_path = filedialog.askopenfilename(filetypes=[("Image Files", "*.png;*.jpg;*.jpeg")])
    if file_path:
        img = Image.open(file_path)
        img = img.resize((250, 250))
        img = ImageTk.PhotoImage(img)
        panel.config(image=img)
        panel.image = img
        
        # Run deepfake detection
        result = detect_deepfake(file_path)
        label.config(text=f"Result: {result}", fg="red" if result == "Fake" else "green")

# Create Tkinter GUI
root = tk.Tk()
root.title("DeepShield - Deepfake Detection")

btn = tk.Button(root, text="Upload Image", command=upload_image, font=("Arial", 14))
btn.pack()

panel = tk.Label(root)
panel.pack()

label = tk.Label(root, text="Upload an image for analysis", font=("Arial", 14))
label.pack()

root.mainloop()
